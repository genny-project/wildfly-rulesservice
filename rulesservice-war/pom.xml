<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
   http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>life.genny</groupId>
    <artifactId>rulesservice-war</artifactId>
    <packaging>war</packaging>
    <version>9.13.2</version>
    <name>rulesservice-war</name>
    <url>http://genny.life</url>

    <parent>
        <groupId>life.genny</groupId>
        <artifactId>wildfly-rulesservice</artifactId>
        <version>9.13.2</version>
    </parent>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <properties>
        <!--<ear.name>z-ear.ear</ear.name>-->
        <!--<rar.name>vertx-jca-adapter</rar.name>-->
        <!--<rar.version>3.5.1</rar.version>-->
        <!--<rar.file.name>${rar.name}-${rar.version}.rar</rar.file.name>-->
        <vertx.version>3.9.3</vertx.version>

        <genny-rules.version>${project.version}</genny-rules.version>
        <kie.version>7.34.0.Final</kie.version>


        <version.org.wildfly>22.0.1.Final</version.org.wildfly>
        <version.wildfly-jsf>22.0.1.Final</version.wildfly-jsf>
        <version.wildfly-dist>22.0.1.Final</version.wildfly-dist>
        <version.keycloak>20.0.0</version.keycloak>
        <version.wildfly.maven.plugin>1.2.1.Final</version.wildfly.maven.plugin>

        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <version.h2>1.4.195</version.h2>
        <version.postgresql>9.4.1207</version.postgresql>
        <version.mysql-connector-java>8.0.21</version.mysql-connector-java>

        <version.jodatime>2.7</version.jodatime>

        <version.h2db>1.4.193</version.h2db>
        <jackson.version>2.6.3</jackson.version>

        <joda-time-version>2.8</joda-time-version>
        <jersey.version>2.13</jersey.version>
        <project.http.version>1.19.0</project.http.version>
        <project.oauth.version>1.19.0</project.oauth.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>


        <version.ee7>1.0.2.Final</version.ee7>
        <version.resteasy>3.0.10.Final</version.resteasy>
        <version.slf4j>1.7.21</version.slf4j>
        <version.swagger>1.5.16</version.swagger>

        <version.org.jboss.arquillian>1.1.5.Final</version.org.jboss.arquillian>
        <version.junit>4.13.1</version.junit>

        <!--<hazelcast.version>3.12.2</hazelcast.version>-->
        <javax-cache.version>1.0.0-PFD</javax-cache.version>
        <log4j-core-version>2.17.1</log4j-core-version>
        <httpclient.version>4.5.13</httpclient.version>
    </properties>

    <dependencies>
			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-core</artifactId>
				<version>3.9.3</version>
				<!--<scope>provided</scope>-->
			</dependency>

        <dependency>
            <groupId>io.smallrye.reactive</groupId>
            <artifactId>smallrye-reactive-messaging-provider</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>io.smallrye.reactive</groupId>
            <artifactId>smallrye-reactive-messaging-kafka</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>io.smallrye.reactive</groupId>
            <artifactId>mutiny-reactive-streams-operators</artifactId>
            <version>0.14.0</version>
        </dependency>
        <dependency>
            <groupId>io.smallrye.config</groupId>
            <artifactId>smallrye-config</artifactId>
            <version>1.10.0</version>
        </dependency> 

        <!--<dependency>-->
            <!--<groupId>io.vertx</groupId>-->
            <!--<artifactId>vertx-core</artifactId>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>io.vertx</groupId>-->
            <!--<artifactId>vertx-hazelcast</artifactId>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>io.vertx</groupId>-->
            <!--<artifactId>vertx-jca-api</artifactId>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ejb3</groupId>
            <artifactId>jboss-ejb3-ext-api</artifactId>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>io.vertx</groupId>-->
            <!--<artifactId>vertx-jca-adapter</artifactId>-->
            <!--<version>${vertx.version}</version>-->
            <!--<type>rar</type>-->
        <!--</dependency>-->


        <!-- https://mvnrepository.com/artifact/org.wildfly/wildfly-ejb-client-bom -->
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-ejb-client-bom</artifactId>
            <version>${version.org.wildfly}</version>
            <type>pom</type>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.wildfly/wildfly-jms-client-bom -->
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-jms-client-bom</artifactId>
            <version>${version.org.wildfly}</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>life.genny</groupId>
            <artifactId>genny-rules</artifactId>
            <version>${genny-rules.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.hazelcast</groupId>
                    <artifactId>hazelcast</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.vertx</groupId>
                    <artifactId>vertx-hazelcast</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.hazelcast</groupId>
                    <artifactId>hazelcast-client</artifactId>
                </exclusion>
            </exclusions>

        </dependency>

        <dependency>
            <groupId>life.genny</groupId>
            <artifactId>qwanda-utils</artifactId>
            <version>${genny-rules.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.hazelcast</groupId>
                    <artifactId>hazelcast</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.vertx</groupId>
                    <artifactId>vertx-hazelcast</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.hazelcast</groupId>
                    <artifactId>hazelcast-client</artifactId>
                </exclusion>
            </exclusions>

        </dependency>


        <!-- https://mvnrepository.com/artifact/org.wildfly/wildfly-jsf -->
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-jsf</artifactId>
            <version>${version.wildfly-jsf}</version>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>${javax-cache.version}</version>
        </dependency>

        <!--> <dependency> <groupId>com.hazelcast</groupId> <artifactId>hazelcast</artifactId>
            <version>${hazelcast.version}</version> </dependency> <dependency> <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-client</artifactId> <version>${hazelcast.version}</version>
            </dependency> </! -->

        <!-- <dependency> <groupId>commons-io</groupId> <artifactId>commons-io</artifactId>
            <version>2.5</version> </dependency> -->
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.gdata/core -->
        <dependency>
            <groupId>com.google.gdata</groupId>
            <artifactId>core</artifactId>
            <version>1.47.1</version>
        </dependency>

        <dependency>
            <groupId>com.google.api-client</groupId>
            <artifactId>google-api-client</artifactId>
            <version>1.22.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-sheets</artifactId>
            <version>v4-rev483-1.22.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.oauth-client</groupId>
            <artifactId>google-oauth-client-jetty</artifactId>
            <version>1.22.0</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.1</version>
        </dependency>

        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>2.1.3</version>
            <!--scope>provided</scope-->
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <version>1.0.2.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>8.0</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jboss.resteasy/resteasy-validator-provider-11 -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-validator-provider-11</artifactId>
            <version>3.1.4.Final</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${version.mysql-connector-java}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jaxrs</artifactId>
            <version>${version.swagger}</version>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-adapter-core</artifactId>
            <version>${version.keycloak}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-adapter-spi</artifactId>
            <version>${version.keycloak}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Contains KeycloakPrincipal -->
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-core</artifactId>
            <version>${version.keycloak}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-admin-client</artifactId>
            <version>${version.keycloak}</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1</version>

        </dependency>
        <dependency>
            <groupId>com.google.maps</groupId>
            <artifactId>google-maps-services</artifactId>
            <version>0.1.15</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>1.11.43</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
            <version>3.0.4.Final</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>libphonenumber</artifactId>
            <version>7.7.3</version>
        </dependency>
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.9</version>
        </dependency>
        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars</artifactId>
            <version>4.0.6</version>
        </dependency>
        <dependency>
            <groupId>org.hashids</groupId>
            <artifactId>hashids</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.14.2</version>
        </dependency>
        <!-- Needed to produce json dates properly -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.9.8
            </version>

        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${version.slf4j}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j-core-version}</version>

        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j-core-version}</version>
        </dependency>

        <!-- <dependency> <groupId>org.jboss.spec</groupId> <artifactId>jboss-javaee-7.0</artifactId>
            <type>pom</type> <version>${version.ee7}</version> <scope>provided</scope>
            </dependency> -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${version.resteasy}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson-provider</artifactId>
            <version>3.0.8.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-jaxrs -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>1.9.13</version>
        </dependency>
        <!-- JUnit regression testing framework. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>

        <!-- <dependency> <groupId>org.jboss.arquillian.junit</groupId> <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope> </dependency> <dependency> <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId> <scope>test</scope>
            </dependency> -->
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core</artifactId>
            <version>2.4.5.Final</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-spi</artifactId>
            <version>3.0.Final</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jboss.logging/jboss-logging -->
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>3.3.1.Final</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jboss.remoting/jboss-remoting -->
        <dependency>
            <groupId>org.jboss.remoting</groupId>
            <artifactId>jboss-remoting</artifactId>
            <version>5.0.20.Final</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.wildfly.common/wildfly-common -->
        <dependency>
            <groupId>org.wildfly.common</groupId>
            <artifactId>wildfly-common</artifactId>
            <version>1.2.0.Final</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jboss.xnio/xnio-api -->
        <dependency>
            <groupId>org.jboss.xnio</groupId>
            <artifactId>xnio-api</artifactId>
            <version>3.5.4.Final</version>
        </dependency>


        <!--<dependency>-->
            <!--<groupId>com.hazelcast</groupId>-->
            <!--<artifactId>hazelcast-hibernate</artifactId>-->
            <!--<version>3.8.2</version>-->
            <!--<type>pom</type>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->


        <dependency>
            <groupId>org.kie</groupId>
            <artifactId>kie-api</artifactId>
            <version>${kie.version}</version>

        </dependency>

        <dependency>
            <groupId>org.kie</groupId>
            <artifactId>kie-internal</artifactId>
            <version>${kie.version}</version>
        </dependency>

        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-decisiontables</artifactId>
            <version>${kie.version}</version>

        </dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-core</artifactId>
            <version>${kie.version}</version>

        </dependency>

        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-compiler</artifactId>
            <version>${kie.version}</version>

        </dependency>

        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-flow</artifactId>
            <version>${kie.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-flow-builder</artifactId>
            <version>${kie.version}</version>

        </dependency>
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-bpmn2</artifactId>
            <version>${kie.version}</version>

        </dependency>
        <dependency>
            <groupId>org.apache.xmlbeans</groupId>
            <artifactId>xmlbeans</artifactId>
            <version>3.0.0</version>

        </dependency>
        <!-- https://mvnrepository.com/artifact/io.vavr/vavr -->
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
            <version>0.9.1</version>

        </dependency>


        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-persistence-jpa</artifactId>
            <version>${kie.version}</version>
        </dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-persistence-jpa</artifactId>
            <version>${kie.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0.2</version>
        </dependency>

    </dependencies>

    <dependencyManagement>

        <dependencies>
            <!-- JUnit regression testing framework. -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${version.junit}</version>
            </dependency>

            <!-- Arquillian BOM (Bill Of Materials). -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${version.org.jboss.arquillian}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.wildfly.bom/wildfly-javaee7 -->
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-javaee7</artifactId>
                <version>${version.org.wildfly}</version>
                <type>pom</type>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-dependency-plugin
                                        </artifactId>
                                        <versionRange>
                                            [2.1,)
                                        </versionRange>
                                        <goals>
                                            <goal>unpack</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <attachClasses>true</attachClasses>
                    <classesClassifier>classes</classesClassifier>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.3</version>
                <executions>
                    <execution>
                        <id>git-info</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <configuration>
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>
                            <generateGitPropertiesFilename>target/classes/${project.name}-git.properties
                            </generateGitPropertiesFilename>
                            <!-- If you'd like to tell the plugin where your .git directory is,
                                use this setting, otherwise we'll perform a search trying to figure out the
                                right directory. It's better to add it explicite IMHO. -->
                            <dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>

                            <!-- that's the default value, you don't have to set it -->
                            <prefix>git</prefix>

                            <!-- that's the default value -->
                            <dateFormat>yyyy.MM.dd '@' HH:mm:ss z</dateFormat>

                            <!-- @since 2.2.0 -->
                            <!-- If you want to set the timezone of the dateformat to anything
                                in particular you can do this by using this option. As a general warning
                                try to avoid three-letter time zone IDs because the same abbreviation are
                                often used for multiple time zones. The default value we'll use the timezone
                                use the timezone that's shipped with java (java.util.TimeZone.getDefault().getID()).
                                *Note*: If you plan to set the java's timezone by using `MAVEN_OPTS=-Duser.timezone=UTC
                                mvn clean package`, `mvn clean package -Duser.timezone=UTC` or any other
                                configuration keep in mind that this option will override those settings
                                and will not take other configurations into account! -->
                            <dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>

                            <!-- false is default here, it prints some more information during
                                the build -->
                            <verbose>false</verbose>

                            <!-- ALTERNATE SETUP - GENERATE FILE -->
                            <!-- If you want to keep git information, even in your WAR file etc,
                                use this mode, which will generate a properties file (with filled out values)
                                which you can then normally read using new Properties().load(/**/) -->

                            <!-- this is false by default, forces the plugin to generate the git.properties
                                file -->
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>
                            <!-- The path for the to be generated properties file, it's relative
                                to ${project.basedir} -->
                            <generateGitPropertiesFilename>src/main/resources/${project.name}-git.properties
                            </generateGitPropertiesFilename>

                            <!-- Denotes the format to save properties in. Valid options are "properties"
                                (default) and "json". Properties will be saved to the generateGitPropertiesFilename
                                if generateGitPropertiesFile is set to `true`. -->
                            <format>properties</format>

                            <!-- this is true by default; You may want to set this to false, if
                                the plugin should run inside a <packaging>pom</packaging> project. Most projects
                                won't need to override this property. For an use-case for this kind of behaviour
                                see: https://github.com/ktoso/maven-git-commit-id-plugin/issues/21 -->
                            <skipPoms>true</skipPoms>

                            <!-- @since 2.1.4 -->
                            <!-- Tell maven-git-commit-id to inject the git properties into all
                                reactor projects not just the current one. For details about why you might
                                want to skip this, read this issue: https://github.com/ktoso/maven-git-commit-id-plugin/pull/65
                                The property is set to ``false`` by default to prevent the overriding of
                                properties that may be unrelated to the project. -->
                            <injectAllReactorProjects>false</injectAllReactorProjects>

                            <!-- @since 2.0.4 -->
                            <!-- true by default, controls whether the plugin will fail when no
                                .git directory is found, when set to false the plugin will just skip execution -->
                            <failOnNoGitDirectory>true</failOnNoGitDirectory>

                            <!-- @since 2.1.5 -->
                            <!-- true by default, controls whether the plugin will fail if it
                                was unable to obtain enough data for a complete run, if you don't care about
                                this, you may want to set this value to false. -->
                            <failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>

                            <!-- @since 2.1.8 -->
                            <!-- skip the plugin execution completely. This is useful for e.g.
                                profile activated plugin invocations or to use properties to enable / disable
                                pom features. Default value is 'false'. -->
                            <skip>false</skip>

                            <!-- @since 2.1.12 -->
                            <!-- Use with caution! In a multi-module build, only run once. This
                                means that the plugins effects will only execute once, for the parent project.
                                This probably won't "do the right thing" if your project has more than one
                                git repository. Important: If you're using `generateGitPropertiesFile`, setting
                                `runOnlyOnce` will make the plugin only generate the file in the directory
                                where you started your build (!). The `git.*` maven properties are available
                                in all modules. Default value is `false`. -->
                            <runOnlyOnce>false</runOnlyOnce>
                            <!-- @since 2.1.9 -->
                            <!-- Can be used to exclude certain properties from being emited into
                                the resulting file. May be useful when you want to hide {@code git.remote.origin.url}
                                (maybe because it contains your repo password?), or the email of the committer
                                etc. Each value may be globbing, that is, you can write {@code git.commit.user.*}
                                to exclude both, the {@code name}, as well as {@code email} properties from
                                being emitted into the resulting files. Please note that the strings here
                                are Java regexes ({@code .*} is globbing, not plain {@code *}). -->
                            <excludeProperties>
                                <!-- <excludeProperty>git.user.*</excludeProperty> -->
                            </excludeProperties>

                            <!-- @since 2.1.14 -->
                            <!-- Can be used to include only certain properties into the resulting
                                file. Will be overruled by the exclude properties. Each value may be globbing,
                                that is, you can write {@code git.commit.user.*} to include both, the {@code
                                name}, as well as {@code email} properties into the resulting files. Please
                                note that the strings here are Java regexes ({@code .*} is globbing, not
                                plain {@code *}). -->
                            <includeOnlyProperties>
                                <!-- <includeOnlyProperty>^git.commit.id.full$</includeOnlyProperty> -->
                            </includeOnlyProperties>

                            <!-- @since 2.1.10 -->
                            <!-- false is default here, if set to true it uses native `git` excutable
                                for extracting all data. This usually has better performance than the default
                                (jgit) implemenation, but requires you to have git available as executable
                                for the build as well as *might break unexpectedly* when you upgrade your
                                system-wide git installation. As rule of thumb - stay on `jgit` (keep this
                                `false`) until you notice performance problems. -->
                            <useNativeGit>false</useNativeGit>

                            <!-- @since v2.0.4 -->
                            <!-- Controls the length of the abbreviated git commit it (git.commit.id.abbrev)
                                Defaults to `7`. `0` carries the special meaning. Maximum value is `40`,
                                because of max SHA-1 length. -->
                            <abbrevLength>7</abbrevLength>

                            <!-- @since 2.1.0 -->
                            <!-- read up about git-describe on the in man, or it's homepage -
                                it's a really powerful versioning helper and the recommended way to use git-commit-id-plugin.
                                The configuration bellow is optional, by default describe will run "just
                                like git-describe on the command line", even though it's a JGit reimplementation. -->
                            <gitDescribe>

                                <!-- don't generate the describe property -->
                                <skip>false</skip>


                                <!-- if no tag was found "near" this commit, just print the commit's
                                    id instead, helpful when you always expect this field to be not-empty -->
                                <always>false</always>
                                <!-- how many chars should be displayed as the commit object id?
                                    7 is git's default, 0 has a special meaning (see end of this README.md),
                                    and 40 is the maximum value here -->
                                <abbrev>7</abbrev>

                                <!-- when the build is triggered while the repo is in "dirty state",
                                    append this suffix -->
                                <dirty>-dirty</dirty>

                                <!-- Only consider tags matching the given pattern. This can be used
                                    to avoid leaking private tags from the repository. -->
                                <match>*</match>

                                <!-- always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty"
                                    format, even if "on" a tag. The distance will always be 0 if you're "on"
                                    the tag. -->
                                <forceLongFormat>false</forceLongFormat>
                            </gitDescribe>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <!-- Fork every test because it will launch a separate AS instance -->
                    <forkMode>always</forkMode>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <!-- the maven dependency plugin will have already downloaded the server
                            on /target -->
                        <jboss.home>${project.basedir}/target/${version.org.wildfly}</jboss.home>
                        <module.path>${project.basedir}/target/${version.org.wildfly}/modules</module.path>
                    </systemPropertyVariables>
                    <redirectTestOutputToFile>false</redirectTestOutputToFile>
                </configuration>
            </plugin>            <!--This plugin's configuration is used to store Eclipse m2e settings only.
				It has no influence on the Maven build itself. -->


            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>1.2.1.Final</version>
            </plugin>
        </plugins>
        <finalName>${project.name}</finalName>
    </build>

    <profiles>

        <!-- Arquillian WildFly managed profile -->
        <profile>
            <id>arq-wildfly-managed</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <!-- https://mvnrepository.com/artifact/org.wildfly.arquillian/wildfly-arquillian-container-managed -->
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>2.1.0.Final</version>
                    <scope>test</scope>
                </dependency>

            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${version.wildfly-dist}</version>
                                            <type>zip</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Arquillian WildFly remote profile -->
        <profile>
            <id>arq-widlfly-remote</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <version>8.2.1.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
